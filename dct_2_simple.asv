% 2D - DCT (Simple)
% data : matrix
% -----------------------------------
function dct2_result = dct_2_simple(data)
    
    N = length(data);   % we assume that height=width
    
    xn = data;
    Xij = zeros(N,N); % NxN matrix needed to store result
       
    sum_k=zeros(1,N);
    sum_l=0;
    inner = zeros(1,N);
        
    for i=1:N
        for j=1:N     
            for k = 1:N                    
                
                %l=1:N;
                %inner = xn(k,l) * cos(((2*pi)*((i-1)/(2*N))*((k-1)+0.5))) * cos(((2*pi)*((j-1)./(2*N))*((l-1)+0.5)));
                %sum_l = sum(inner);
                for l = 1:N              
                    inner(l) = xn(k,l) * cos(((2*pi)*((i-1)/(2*N))*((k-1)+0.5))) * cos(((2*pi)*((j-1)/(2*N))*((l-1)+0.5)));            
                    %sum_l = sum_l + inner;                              
                end
                
                sum_l = sum(inner);                
                
                %sum_k = sum_k + sum_l;
                
                sum_k(k) = sum_l;
                
                sum_l = 0;
            end
                  
            sum_
            
            % calculating and adding the cj term 
            if(i==1)
                ci = 1/sqrt(2);
            else
                ci = 1;
            end;
            
            if (j==1)
                cj = 1/sqrt(2);
            else
                cj = 1;
            end;           
            
            Xij(i,j) = (2/N)* ci * cj * sum_k;   
            sum_k =0;
            
            clc;display(['Finished Encoding =',num2str(i),',',num2str(j)])
           
        end         
    end   
    
    
    dct2_result = Xij;
    
    